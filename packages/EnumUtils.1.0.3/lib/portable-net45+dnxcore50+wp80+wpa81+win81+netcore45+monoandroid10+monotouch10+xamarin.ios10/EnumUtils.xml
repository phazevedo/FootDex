<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EnumUtils</name>
    </assembly>
    <members>
        <member name="M:EnumUtils.EnumExtensions.IsEnum``1(``0)">
            <summary>
            Checks if the given type <typeparamref name="T"/> is an enum type.
            </summary>
            <typeparam name="T">Generic param type.</typeparam>
            <returns>True if given type is an enum, otherwise, false.</returns>
        </member>
        <member name="M:EnumUtils.EnumExtensions.IsEnum(System.Object)">
            <summary>
            Checks if the given parameter <paramref name="value"/> is an enum type.
            </summary>
            <returns>True if given type is an enum, otherwise, false.</returns>
            <param name="value"></param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="value"/> is null.</exception>
        </member>
        <member name="M:EnumUtils.EnumHelper.IsEnum``1">
            <summary>
            Checks if the given type <typeparamref name="T"/> is an enum type.
            </summary>
            <typeparam name="T">Generic param type.</typeparam>
            <returns>True if given type is an enum, otherwise, false.</returns>
        </member>
        <member name="M:EnumUtils.EnumHelper.IsEnum(System.Object)">
            <summary>
            Checks if the given parameter <paramref name="value"/> is an enum type.
            </summary>
            <returns>True if given type is an enum, otherwise, false.</returns>
            <param name="value"></param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="value"/> is null.</exception>
        </member>
        <member name="M:EnumUtils.EnumHelper.Cast``1(System.Int32,``0)">
            <summary>
            Safely cast an integer to the underlying enum value.
            </summary>
            <typeparam name="TEnum">Generic param type.</typeparam>
            <param name="value">The integer value for the desired enum.</param>
            <param name="defaultValue">The value returned if the integer does not map to the enum.</param>
            <returns>The enum value which maps to the given integer value.</returns>
        </member>
    </members>
</doc>
